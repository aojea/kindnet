<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>User Guides on Kindnet</title><link>https://kindnet.es/docs/user/</link><description>Recent content in User Guides on Kindnet</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 27 Dec 2024 12:39:58 +0000</lastBuildDate><atom:link href="https://kindnet.es/docs/user/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration Options</title><link>https://kindnet.es/docs/user/configuration/</link><pubDate>Fri, 27 Dec 2024 12:39:58 +0000</pubDate><guid>https://kindnet.es/docs/user/configuration/</guid><description>Kindnet can be customized through the use of flags passed to the kind create cluster command. These flags allow you to adjust various aspects of the network environment.
Feature flags: -control-plane-endpoint string The URL of the control plane -dns-caching If set, enable Kubernetes DNS caching (default false) -hostname-override string If non-empty, will be used as the name of the Node that kube-network-policies is running on. If unset, the node name is assumed to be the same as the node&amp;#39;s hostname.</description></item><item><title>Monitoring</title><link>https://kindnet.es/docs/user/monitoring/</link><pubDate>Tue, 24 Dec 2024 11:30:40 +0000</pubDate><guid>https://kindnet.es/docs/user/monitoring/</guid><description>Kindnet provides monitoring capabilities by exposing key metrics that offer insights into the health and performance of your cluster&amp;rsquo;s network. These metrics can be easily collected using Prometheus and visualized with Grafana for effective monitoring and troubleshooting.
Metrics Endpoint Kindnet exposes its metrics on an HTTP endpoint that can be configured through the &amp;ndash;metrics-bind-address flag. By default, the endpoint is available at :19080/metrics. This endpoint provides data in the Prometheus exposition format, making it readily consumable by Prometheus.</description></item><item><title>Network Policies</title><link>https://kindnet.es/docs/user/network-policies/</link><pubDate>Tue, 24 Dec 2024 11:30:40 +0000</pubDate><guid>https://kindnet.es/docs/user/network-policies/</guid><description>Kubernetes Network Policies Kindnet implements Kubernetes Network Policies using the kube-network-policies project, which employs a &amp;ldquo;first-packet inspection&amp;rdquo; approach:
When a new connection is attempted, the first packet is intercepted and evaluated against defined network policies in user space. This determines if the connection is allowed. The resulting verdict is cached, optimizing subsequent traffic on that connection by avoiding repeated user space processing. If allowed, the host&amp;rsquo;s dataplane (e.g., iptables) is programmed to handle further traffic efficiently.</description></item><item><title>Fastpath</title><link>https://kindnet.es/docs/user/fastpath/</link><pubDate>Fri, 27 Dec 2024 12:39:58 +0000</pubDate><guid>https://kindnet.es/docs/user/fastpath/</guid><description>Kindnet offers a fastpath feature to significantly boost network performance. This feature leverages the kernel&amp;rsquo;s flowtable architecture to offload network traffic processing, reducing latency and increasing throughput.
What is Fastpath? Fastpath is a mechanism that bypasses the normal Kubernetes networking path for specific network flows. By identifying and offloading these flows to the kernel&amp;rsquo;s flowtable, Kindnet reduces the overhead associated with processing each packet individually.
The kernel Netfilterâ€™s flowtable infrastructure allows to define a fastpath through the flowtable datapath.</description></item><item><title>Masquerading</title><link>https://kindnet.es/docs/user/masquerade/</link><pubDate>Tue, 24 Dec 2024 11:30:40 +0000</pubDate><guid>https://kindnet.es/docs/user/masquerade/</guid><description>The Challenge of External Access Kubernetes promotes a flat network model where pods can communicate directly with each other without Network Address Translation (NAT). However, for pods to access external resources or be accessible from outside the cluster, they need to use a public IP address. Traditional solutions often involve NAT gateways, which can introduce complexity, scalability bottlenecks, and connection tracking limitations.
Node-Level Masquerading Kindnet simplifies this process by utilizing the node&amp;rsquo;s external IP address to masquerade the traffic originating from pods.</description></item><item><title>DNS cache</title><link>https://kindnet.es/docs/user/dnscache/</link><pubDate>Fri, 27 Dec 2024 12:39:58 +0000</pubDate><guid>https://kindnet.es/docs/user/dnscache/</guid><description>Kindnet enhances your cluster&amp;rsquo;s network performance with a built-in DNS cache. This feature transparently intercepts DNS requests within your cluster and stores the results, reducing latency and improving name resolution speed.
How it Works When a pod in your cluster performs a DNS lookup, Kindnet checks its internal cache for the corresponding record. If found, the cached response is returned immediately, eliminating the need to query external DNS servers. If the record is not cached, Kindnet forwards the request to the configured upstream DNS server, stores the response in its cache, and then delivers it to the pod.</description></item><item><title>NAT64</title><link>https://kindnet.es/docs/user/nat64/</link><pubDate>Tue, 24 Dec 2024 11:30:40 +0000</pubDate><guid>https://kindnet.es/docs/user/nat64/</guid><description>Kindnet simplifies IPv6 adoption in your Kubernetes cluster by providing built-in NAT64 functionality. This feature enables IPv6-only pods to communicate with IPv4 services outside the cluster, ensuring smooth operation even in dual-stack or IPv6-only environments.
How it Works: NAT64 allows IPv6-only nodes to transparently access IPv4 resources by translating IPv6 addresses to IPv4 addresses. Kindnet automatically configures a NAT64 gateway for your cluster when using IPv6, using the well-known prefix 64:ff9b::/96.</description></item></channel></rss>